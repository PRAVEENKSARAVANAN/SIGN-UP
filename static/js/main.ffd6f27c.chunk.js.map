{"version":3,"sources":["components/SignUp.js","components/Success.js","App.js","reportWebVitals.js","index.js"],"names":["SignUp","useState","firstName","setFirstName","password","setPassword","email","setEmail","navigate","useNavigate","className","onSubmit","event","preventDefault","state","id","type","label","value","onChange","e","target","required","Success","useLocation","to","App","path","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"iOAgEeA,EA7DA,WAEX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAwBjB,OACI,qBAAKC,UAAU,uBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,mCACI,oBAAIA,UAAU,4BAAd,mBACA,oBAAIA,UAAU,YAAd,wBAEJ,qBAAKA,UAAU,MAAf,SACI,8HAEJ,uBAAMC,SAhCK,SAACC,GACpBA,EAAMC,iBACNL,EAAS,WAAY,CACjBM,MAAO,CACHZ,UAAWA,EACXI,MAAOA,MA2BP,UACI,qCACI,kCACI,mBAAGI,UAAU,yBAAb,wBACA,uBAAOK,GAAG,YAAYC,KAAK,OAAOC,MAAM,aAAaC,MAAOhB,EAAWiB,SAlB/D,SAACC,GAC7BjB,EAAaiB,EAAEC,OAAOH,QAiBwGI,UAAQ,EAAC,mBAAc,cAAY,iBAEjJ,kCACI,mBAAGZ,UAAU,yBAAb,2BACA,uBAAOK,GAAG,QAAQC,KAAK,QAAQC,MAAM,gBAAgBC,MAAOZ,EAAOa,SA9B/D,SAACC,GACzBb,EAASa,EAAEC,OAAOH,QA6BoGI,UAAQ,EAAC,mBAAc,cAAY,aAEzI,kCACI,mBAAGZ,UAAU,yBAAb,sBACA,uBAAOK,GAAG,WAAWC,KAAK,WAAWC,MAAM,WAAWC,MAAOd,EAAUe,SA9BhE,SAACC,GAC5Bf,EAAYe,EAAEC,OAAOH,QA6BwGI,UAAQ,EAAC,mBAAc,cAAY,mBAGpJ,wBAAQN,KAAK,SAASE,MAAM,SAASR,UAAU,wBAAwB,cAAY,eAAnF,8BC/BLa,EAtBC,WAEZ,IAAQT,EAAUU,cAAVV,MAER,OACIA,EAAQ,qBAAKJ,UAAU,uBAAf,SACJ,sBAAKA,UAAU,sBAAf,UACI,mCACI,oBAAIA,UAAU,iCAAd,qBACA,qBAAIA,UAAU,iBAAd,UAAgCI,EAAMZ,UAAtC,UAEJ,sBAAKQ,UAAU,MAAf,UACI,mFACA,0FAEJ,8BAAK,mBAAGA,UAAU,eAAb,SAA6BI,EAAMR,UACxC,wBAAQU,KAAK,SAASE,MAAM,SAASR,UAAU,wBAAwB,cAAY,eAAnF,0BAEC,cAAC,IAAD,CAAUe,GAAG,OCRfC,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,QAAS,cAAC,EAAD,U,OCG7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAwDC,WAAhE,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.ffd6f27c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUp = () => {\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleOnSubmit = (event) => {\n        event.preventDefault();\n        navigate('/success', {\n            state: {\n                firstName: firstName,\n                email: email\n            }\n        });\n    };\n\n    const handleEmailOnChange = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handlePasswordOnChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handlefirstNameOnChange = (e) => {\n        setFirstName(e.target.value);\n    }\n\n    return (\n        <div className=\"parent-div-container\">\n            <div className=\"child-div-container\">\n                <header>\n                    <h1 className=\"title-txt font-weight-400\">Let's</h1>\n                    <h1 className=\"title-txt\">Sign Up</h1>\n                </header>\n                <div className=\"txt\">\n                    <p>Use the form below to sign up for this super awesome service. You're only a few steps away!</p>\n                </div>\n                <form onSubmit={handleOnSubmit}>\n                    <fieldset>\n                        <label>\n                            <p className=\"txt txt-label txt-bold\">First Name</p>\n                            <input id=\"firstName\" type=\"text\" label=\"First Name\" value={firstName} onChange={handlefirstNameOnChange} required aria-required data-testid=\"firstName\" />\n                        </label>\n                        <label>\n                            <p className=\"txt txt-label txt-bold\">Email Address</p>\n                            <input id=\"email\" type=\"email\" label=\"Email Address\" value={email} onChange={handleEmailOnChange} required aria-required data-testid=\"email\" />\n                        </label>\n                        <label>\n                            <p className=\"txt txt-label txt-bold\">Password</p>\n                            <input id=\"password\" type=\"password\" label=\"Password\" value={password} onChange={handlePasswordOnChange} required aria-required data-testid=\"password\" />\n                        </label>\n                    </fieldset>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-red btn-right\" data-testid=\"signUpButton\">Sign Up</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","import React from 'react';\n\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst Success = () => {\n\n    const { state } = useLocation();\n\n    return (\n        state ? <div className=\"parent-div-container\">\n            <div className=\"child-div-container\">\n                <header>\n                    <h1 className=\"signUp-title-1 font-weight-400\">Welcome</h1>\n                    <h1 className=\"signUp-title-2\">{state.firstName}!</h1>\n                </header>\n                <div className=\"txt\">\n                    <p>You have been registered for this awesome service.</p>\n                    <p>Please check your email listed below for instructions.</p>\n                </div>\n                <div><p className=\"txt txt-bold\">{state.email}</p></div>\n                <button type=\"Button\" value=\"Submit\" className=\"btn btn-red btn-right\" data-testid=\"signInButton\">Sign In</button>\n            </div>\n        </div> : <Navigate to='/' />\n    );\n}\n\nexport default Success;","import './App.css';\nimport SignUp from './components/SignUp';\nimport Success from './components/Success';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" exact element={<SignUp />} />\n      <Route path=\"/success\" exact element={<Success />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.NODE_ENV === 'development' ? '' : process.env.PUBLIC_URL} >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}