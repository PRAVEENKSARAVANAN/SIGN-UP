{"version":3,"sources":["components/SignUp.js","components/Success.js","App.js","reportWebVitals.js","index.js"],"names":["SignUp","useState","firstName","password","email","user","setUser","navigate","useNavigate","handleChange","event","target","name","value","className","onSubmit","state","autoFocus","id","type","label","onChange","required","Success","useLocation","to","App","path","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"gPAsEeA,EAnEA,WAEX,MAAwBC,mBAAS,CAC7BC,UAAW,GACXC,SAAU,GACVC,MAAO,KAHX,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAWC,cAgBXC,EAAe,SAAAC,GACjBJ,EAAQ,2BACDD,GADA,kBAEFK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAI1C,OACI,qBAAKC,UAAU,uBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,+BAAI,sBAAMA,UAAU,qBAAhB,mBAAiD,sBAAMA,UAAU,qBAAhB,wBACrD,qBAAKA,UAAU,MAAf,SACI,8HAEJ,sBAAMC,SAzBK,WACnBR,EAAS,WAAY,CACjBS,MAAO,CACHd,UAAWG,EAAKH,UAChBE,MAAOC,EAAKD,UAqBZ,SACI,qCACI,qBAAKU,UAAU,aAAf,SACI,+CAEI,uBAAOG,WAAS,EAACC,GAAG,YAAYC,KAAK,OAAOC,MAAM,aAAaR,KAAK,YAAYC,MAAOR,EAAKH,UAAWmB,SAAUZ,EAAca,UAAQ,EAAC,mBAAc,cAAY,mBAG1K,qBAAKR,UAAU,aAAf,SACI,kDAEI,uBAAOI,GAAG,QAAQC,KAAK,QAAQC,MAAM,gBAAgBR,KAAK,QAAQC,MAAOR,EAAKD,MAAOiB,SAAUZ,EAAca,UAAQ,EAAC,mBAAc,cAAY,eAGxJ,qBAAKR,UAAU,aAAf,SACI,6CAEI,uBAAOI,GAAG,WAAWC,KAAK,WAAWC,MAAM,WAAWR,KAAK,WAAWC,MAAOR,EAAKF,SAAUkB,SAAUZ,EAAca,UAAQ,EAAC,mBAAc,cAAY,kBAG/J,wBAAQH,KAAK,SAASN,MAAM,SAASC,UAAU,wBAAwB,cAAY,eAAnF,gCCtCTS,EApBC,WAGZ,IAAQP,EAAUQ,cAAVR,MAER,OACIA,EAAQ,qBAAKF,UAAU,uBAAf,SACJ,sBAAKA,UAAU,sBAAf,UACI,+BAAI,sBAAMA,UAAU,qBAAhB,qBAAmD,uBAAMA,UAAU,qBAAhB,UAAsCE,EAAMd,UAA5C,UACvD,sBAAKY,UAAU,MAAf,UACI,mFACA,0FAEJ,qBAAKA,UAAU,eAAf,SAA8B,4BAAIE,EAAMZ,UACxC,wBAAQe,KAAK,SAASN,MAAM,SAASC,UAAU,wBAAwB,cAAY,eAAnF,0BAEC,cAAC,IAAD,CAAUW,GAAG,OCNfC,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,QAAS,cAAC,EAAD,U,OCG7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAuDC,WAA/D,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.f28e76eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUp = () => {\n\n    const [user, setUser] = useState({\n        firstName: '',\n        password: '',\n        email: '',\n    });\n\n    /* Navigate hook used to redirect to the successs component */\n    const navigate = useNavigate();\n\n    /*\n        Handles Redirect to the /success page and pass firstName & email address to the success component\n    */\n    const handleOnSubmit = () => {\n        navigate('/success', {\n            state: {\n                firstName: user.firstName,\n                email: user.email\n            }\n        });\n        return;\n    };\n\n    /* Assign the User Entered Value to the State and the field */\n    const handleChange = event => {\n        setUser({\n            ...user,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    return (\n        <div className=\"parent-div-container\">\n            <div className=\"child-div-container\">\n                <h1><span className=\"font-weight-normal\">Let's</span><span className=\"header-title-block\">Sign Up</span></h1>\n                <div className=\"txt\">\n                    <p>Use the form below to sign up for this super awesome service. You're only a few steps away!</p>\n                </div>\n                <form onSubmit={handleOnSubmit}>\n                    <fieldset>\n                        <div className=\"form-field\">\n                            <label>\n                                First Name\n                                <input autoFocus id=\"firstName\" type=\"text\" label=\"First Name\" name=\"firstName\" value={user.firstName} onChange={handleChange} required aria-required data-testid=\"firstName\" />\n                            </label>\n                        </div>\n                        <div className=\"form-field\">\n                            <label>\n                                Email Address\n                                <input id=\"email\" type=\"email\" label=\"Email Address\" name=\"email\" value={user.email} onChange={handleChange} required aria-required data-testid=\"email\" />\n                            </label>\n                        </div>\n                        <div className=\"form-field\">\n                            <label>\n                                Password\n                                <input id=\"password\" type=\"password\" label=\"Password\" name=\"password\" value={user.password} onChange={handleChange} required aria-required data-testid=\"password\" />\n                            </label>\n                        </div>\n                        <button type=\"submit\" value=\"Submit\" className=\"btn btn-red btn-right\" data-testid=\"signUpButton\">Sign Up</button>\n                    </fieldset>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","import React from 'react';\n\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst Success = () => {\n\n    /* UseLocation hook is used to retrieve the state params from the signUp component */\n    const { state } = useLocation();\n\n    return (\n        state ? <div className=\"parent-div-container\">\n            <div className=\"child-div-container\">\n                <h1><span className=\"font-weight-normal\">Welcome</span><span className=\"header-title-block\">{state.firstName}!</span></h1>\n                <div className=\"txt\">\n                    <p>You have been registered for this awesome service.</p>\n                    <p>Please check your email listed below for instructions.</p>\n                </div>\n                <div className=\"txt txt-bold\"><p>{state.email}</p></div>\n                <button type=\"Button\" value=\"Submit\" className=\"btn btn-red btn-right\" data-testid=\"signInButton\">Sign In</button>\n            </div>\n        </div> : <Navigate to='/' />\n    );\n}\n\nexport default Success;","import './App.css';\nimport SignUp from './components/SignUp';\nimport Success from './components/Success';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" exact element={<SignUp />} />\n      <Route path=\"/success\" exact element={<Success />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.NODE_ENV !== 'production' ? '' : process.env.PUBLIC_URL} >\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}